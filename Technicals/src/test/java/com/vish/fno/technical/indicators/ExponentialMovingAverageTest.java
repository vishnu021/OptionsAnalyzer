package com.vish.fno.technical.indicators;

import com.vish.fno.technical.model.Candle;
import com.vish.fno.technical.util.CandleUtils;
import lombok.extern.slf4j.Slf4j;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.MockitoAnnotations;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

@Slf4j
class ExponentialMovingAverageTest {
    private static final int DURATION = 14;
    private ExponentialMovingAverage underTest;

    @BeforeEach
    public void before() {
        MockitoAnnotations.openMocks(this);
        underTest = new ExponentialMovingAverage(DURATION);
    }

    @Test
    public void testCalculateEMA() {
        List<Candle> candles = CandleUtils.getCandleData();
        List<Double> ema14 = underTest.calculate(candles);
        List<Double> expectedEMA14 = new ArrayList<>(Arrays.asList(2414.45d, 2417.925d, 2418.4500000000003d, 2417.9d, 2418.1099999999997d, 2418.4249999999997d, 2418.485714285714d, 2418.5499999999997d, 2418.5277777777774d, 2418.74d, 2419.0772727272724d, 2419.6875d, 2420.3576923076926d, 2421.1535714285715d, 2422.359761904762d, 2423.4784603174603d, 2424.4813322751324d, 2425.7504879717812d, 2427.250422908877d, 2428.350366521027d, 2429.896984318223d, 2431.3773864091268d, 2432.907068221243d, 2434.1727924584106d, 2434.7564201306227d, 2435.422230779873d, 2436.0192666758903d, 2436.5633644524382d, 2436.888249192113d, 2437.229815966498d, 2437.8591738376313d, 2438.5912839926136d, 2439.092446126932d, 2439.6134533100076d, 2440.0916595353397d, 2440.739438263961d, 2441.0408464954326d, 2441.242066962708d, 2441.2097913676803d, 2440.861819185323d, 2440.6002432939467d, 2440.820210854754d, 2440.9908494074534d, 2440.865402819793d, 2440.8966824438207d, 2440.8437914513115d, 2440.8446192578035d, 2440.812003356763d, 2440.4304029091945d, 2439.9930158546354d, 2439.360613740684d, 2438.8991985752596d, 2438.5393054318915d, 2438.3273980409726d, 2438.0704116355096d, 2438.161023417442d, 2438.0062202951162d, 2437.752057589101d, 2437.578449910554d, 2437.401323255813d, 2437.081146821705d, 2436.736993912144d, 2436.2987280571915d, 2436.118897649566d, 2436.103044629624d, 2436.0893053456743d, 2436.124064632918d, 2436.1008560151954d, 2436.3474085465027d, 2436.561087406969d, 2436.7396090860398d, 2437.174327874568d, 2437.3644174912924d, 2437.5824951591203d, 2437.8381624712374d, 2437.9330741417393d, 2437.7419975895073d, 2437.5097312442394d, 2437.4351004116743d, 2437.217087023451d, 2436.981475420324d, 2436.697278697614d, 2436.4709748712653d, 2436.3015115550966d, 2436.0146433477503d, 2435.626024234717d, 2435.7492210034216d, 2435.5959915362987d, 2435.3765259981255d, 2435.1529891983755d, 2434.9992573052587d, 2434.866022997891d, 2434.730553264839d, 2434.5264794961936d, 2434.3229488967013d, 2434.153222377141d, 2433.706126060189d, 2433.2653092521637d, 2432.8966013518752d, 2432.550387838292d, 2432.3970027931864d, 2432.4707357540947d, 2432.5013043202152d, 2432.5811304108533d, 2432.2569796894063d, 2432.0027157308186d, 2431.7756869667096d, 2431.538928704482d, 2431.353738210551d, 2431.1932397824776d, 2431.034141144814d, 2430.9495889921723d, 2430.822977126549d, 2430.7265801763424d, 2430.6097028194968d, 2430.5750757768974d, 2430.445065673311d, 2430.332390250203d, 2430.2214048835094d, 2430.4518842323746d, 2430.5049663347245d, 2430.484304156761d, 2430.4463969358594d, 2430.553544011078d, 2430.8130714762674d, 2431.097995279432d, 2431.3182625755076d, 2431.4091608987733d, 2431.35460611227d, 2431.347325297301d, 2431.1676819243276d, 2431.2986576677504d, 2431.4588366453836d, 2431.6509917593326d, 2431.7975261914216d, 2431.8911893658988d, 2431.979030783779d, 2431.8551600126084d, 2431.834472010927d, 2431.8232090761367d, 2431.793447865985d, 2431.8209881505204d, 2431.804856397118d, 2431.8842088775023d, 2431.879647693835d, 2431.862361334657d, 2431.974046490036d, 2431.8108402913645d, 2431.7293949191826d, 2431.7321422632917d, 2431.7745232948528d, 2431.7379201888725d, 2431.706197497023d, 2431.852037830753d, 2431.878432786653d, 2432.041308415099d, 2432.502467293086d, 2433.0554716540078d, 2433.4880754334736d, 2434.5229987090106d, 2434.9465988811426d, 2435.1337190303234d, 2435.2025564929468d, 2435.3755489605537d, 2435.7254757658134d, 2435.9154123303715d, 2436.0800240196554d, 2436.3360208170348d, 2436.4245513747633d, 2436.3546111914616d, 2436.2273296992666d, 2436.1703524060313d, 2436.060972085227d, 2436.0128424738637d, 2435.8911301440153d, 2435.7856461248134d, 2435.694226641505d, 2436.001663089304d, 2436.06810801073d, 2436.1123602759662d, 2436.1373789058375d, 2436.1190617183925d, 2436.183186822607d, 2436.158761912926d, 2436.217593657869d, 2436.188581170153d, 2436.2101036807994d, 2436.182089856693d, 2436.171144542467d, 2436.014991936805d, 2435.886326345231d, 2435.8081494992d, 2435.7003962326403d, 2435.6803434016215d, 2435.6162976147384d, 2435.53412459944d, 2434.869574652848d, 2434.300298032468d, 2434.073591628139d, 2433.823779411054d, 2433.84727548958d, 2433.767638757636d, 2433.8852869232846d, 2433.7672486668466d, 2433.6649488446005d, 2433.656288998654d, 2433.5954504655d, 2433.5160570701d, 2433.3405827940865d, 2433.1618384215417d, 2433.006926632003d, 2433.006003081069d, 2433.00520267026d, 2432.8711756475586d, 2432.8883522278843d, 2432.916571930833d, 2432.794362340055d, 2432.755114028048d, 2432.6410988243083d, 2432.3289523144003d, 2432.038425339147d, 2431.7666352939277d, 2431.531083921404d, 2431.1202727318832d, 2430.5309030342987d, 2429.8467826297256d, 2429.3338782790956d, 2428.9893611752163d, 2428.677446351854d, 2428.1537868382734d, 2428.0199485931703d, 2427.643955447414d, 2427.6114280544257d, 2427.336570980502d, 2427.2250281831016d, 2427.1616910920216d, 2426.9934656130854d, 2426.734336864674d, 2426.589758616051d, 2426.4844574672443d, 2426.266529804945d, 2425.957659164286d, 2426.1499712757145d, 2426.2899751056193d, 2426.51797842487d, 2426.5889146348873d, 2426.5237260169024d, 2426.540562547982d, 2426.4884875415846d, 2426.2766892027066d, 2426.013130642346d, 2426.1847132233665d, 2426.1600847935842d, 2426.032073487773d, 2425.9677970227362d, 2425.9054240863716d, 2425.811367541522d, 2425.509851869319d, 2425.17520495341d, 2425.1785109596217d, 2425.0413761650057d, 2424.9625260096714d, 2425.1675225417152d, 2425.1518528694864d, 2424.9916058202216d, 2424.8660583775254d, 2424.723917260522d, 2424.787394959119d, 2424.98240896457d, 2425.0180877692937d, 2424.975676066721d, 2424.9522525911584d, 2425.0586189123374d, 2425.077469724026d, 2425.253807094156d, 2425.4999661482684d, 2426.1066373284993d, 2426.625752351366d, 2426.988985371184d, 2427.2437873216927d, 2427.3779490121337d, 2427.520889143849d, 2427.6914372580027d, 2427.845912290269d, 2427.966457318233d, 2428.177596342469d, 2428.4139168301394d, 2428.625394586121d, 2428.8086753079715d, 2429.067518600242d, 2429.3051827868762d, 2429.531158415293d, 2429.773670626587d, 2429.9638478763754d, 2430.2086681595256d, 2430.4475124049222d, 2431.187844084266d, 2432.322798206364d, 2433.3597584455156d, 2434.1451239861135d, 2434.445774121298d, 2434.759670905125d, 2434.9383814511084d, 2435.2065972576274d, 2435.412384289944d, 2435.5773997179513d, 2435.7204130888913d, 2435.631024677039d, 2435.6135547201006d, 2435.6250807574206d, 2435.561736656431d, 2435.3535051022404d, 2435.313037755275d, 2435.4046327212386d, 2435.3840150250735d, 2435.366146355064d, 2435.350660174389d, 2435.4772388178035d, 2435.5802736420965d, 2435.6762371564837d, 2435.619405535619d, 2435.670151464203d, 2435.594131268976d, 2435.581580433113d, 2435.6640363753645d, 2435.708831525316d, 2435.6409873219404d, 2435.568855679015d, 2435.5063415884797d, 2435.4388293766824d, 2435.2469854597916d, 2434.927387398486d, 2434.7237357453546d, 2434.080570979307d, 2433.569828182066d, 2433.2405177577907d, 2433.0484487234185d, 2432.901988893629d, 2432.701723707812d, 2432.1081605467707d, 2431.833739140535d, 2431.6492405884633d, 2431.562675176668d, 2431.4409851531123d, 2431.4155204660306d, 2432.1534510705596d, 2432.466324261152d, 2432.7974810263318d, 2433.324483556154d, 2433.561219082d, 2433.886389871067d, 2434.0882045549247d, 2434.343110614268d, 2434.5373625323655d, 2435.03904752805d, 2435.673841190977d, 2436.5706623655133d, 2437.181240716778d, 2437.6170752878743d, 2437.961465249491d, 2438.3666032162255d, 2438.6577227873954d, 2439.1300264157426d, 2439.499356226977d, 2439.9061087300465d, 2440.165294232707d, 2440.403255001679d, 2440.5161543347886d, 2440.64066709015d, 2440.62191147813d, 2440.552323281046d, 2440.5786801769063d, 2440.5148561533188d, 2440.0462086662096d, 2439.7733808440485));

        for (int i = 0; i < ema14.size(); i++) {
            assertEquals(ema14.get(i), expectedEMA14.get(i), 0.001);
        }
    }
}